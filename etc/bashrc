# If not running interactively, don't do anything
[ -z "$PS1" ] && return

HISTCONTROL=ignoreboth # don't save commands that start with space characters and don't save dupes
HISTFILE="${XDG_DATA_HOME}/bash/history"
HISTFILESIZE=2000
HISTSIZE=1000

shopt -s histappend
shopt -s checkwinsize

scripts=(
/usr/share/bash-completion/bash_completion
/usr/share/virtualenvwrapper/virtualenvwrapper_lazy.sh
)
for script in "${scripts[@]}"; do
    if [[ -e "$script" ]]; then
        source "$script"
    fi
done
unset script
unset scripts

VIRTUAL_ENV_DISABLE_PROMPT=1 # assuming direct control
GIT_PS1_SHOWDIRTYSTATE=1 # show * and + when repository is dirty
function _prompt {
    local red='\[\e[0;31m\]'
    local green='\[\e[0;32m\]'
    local yellow='\[\e[0;33m\]'
    local blue='\[\e[0;34m\]'
    local magenta='\[\e[0;35m\]'
    local cyan='\[\e[0;36m\]'
    local white='\[\e[0;37m\]'
    local black_on_red='\[\e[1;30;41m\]'

    local venv=''
    if [[ -n "$VIRTUAL_ENV" ]]; then
        local venv=" ${magenta}with venv ${VIRTUAL_ENV##*/}"
    fi

    local aws=''
    if [[ -n "$AWS_SESSION_EXPIRATION" ]]; then
        local now
        local expiration

        now=$(date +%s)
        expiration=$(date --date="$AWS_SESSION_EXPIRATION" +%s)
        local time_left=$((expiration - now))

        if [[ $time_left -gt 60 ]]; then
            aws=" ${green}with AWS creds ($((time_left/60))m)"
        elif [[ $time_left -gt 0 ]]; then
            aws=" ${red}with AWS creds ($((time_left))s)"
        else
            aws=" ${black_on_red}with EXPIRED AWS creds"
        fi

    fi

    local docker=''
    if [[ -w /var/run/docker.sock ]]; then
        docker=" ${red}w/ Docker"
    fi

    PS1="\n${cyan}\t ${blue}in \w${venv}${aws}${docker}${yellow}$(__git_ps1 " on branch %s")${white}\n\$ "
}
PROMPT_COMMAND=_prompt

#######################
# aliases
alias docker='podman'
alias grep='grep --color=auto'
alias ls='ls --color=auto'
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'

#######################
# custom functions
man() {
    /usr/bin/man -w "$@" && vi -c ":Man $*" -c 'silent only'
}

#######################
SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
export SSH_AUTH_SOCK
